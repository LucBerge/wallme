name: CD

on:
  workflow_dispatch:
  push:
    branches: [ master ]

jobs:
  code_quality:
    name: Code quality
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: python

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

  deploy_pypi:
    name: Deploy Pypi
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel

    - name: Build
      run: |
        python setup.py sdist bdist_wheel

#    - name: Publish
#      uses: pypa/gh-action-pypi-publish@release/v1
#      with:
#        user: __token__
#        password: ${{ secrets.PYPI_API_TOKEN }}

    - name: Get version
      run: |
        chmod +x devscript/get_version.sh
        export WALLME_VERSION=$(devscript/get_version.sh)
        echo The new version is $WALLME_VERSION
        echo "::set-env name=WALLME_VERSION::$WALLME_VERSION"
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        
    outputs:
      wallme_version: ${{ env.WALLME_VERSION }}
     
  deploy_executable:
    name: Deploy Executable
    runs-on: windows-latest
    needs: deploy_pypi
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v4
#      with:
#        python-version: '3.10.1'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Build
      run: |
        echo from wallme.main import main >> wallme.py
        echo main() >> wallme.py
        pyinstaller --noconfirm --onefile --windowed "wallme.py"

    - name: Publish
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: ${{ needs.deploy_pypi.outputs.wallme_version }}
        prerelease: false
        title: ${{ needs.deploy_pypi.outputs.wallme_version }}
        files: |
          ./dist/wallme.exe
          ./dist/wallme
