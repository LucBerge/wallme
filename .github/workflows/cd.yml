name: CD

on:
  workflow_dispatch:
  push:
    paths:
      - '**/*.py'
    branches: [ master ]

jobs:
  code_quality:
    name: Code quality
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: python

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

  deploy_pypi:
    name: Deploy Pypi
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel

    - name: Build
      run: |
        python setup.py sdist bdist_wheel

    - name: Publish
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
     
  build_executable:
    name: Build Executable
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Build
      run: |
        chmod +x devscript/create_exe.sh
        ./devscript/create_exe.sh
      shell: bash
      
    - name: Upload files
      uses: actions/upload-artifact@v4
      with:
        name: executables
        path: dist/

  deploy_executable:
    name: Deploy Executable
    runs-on: ubuntu-latest
    needs: build_executable
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Download files
      uses: actions/download-artifact@v4
      with:
        path: dist/

    - name: Get version
      run: |
        chmod +x devscript/get_version.sh
        export WALLME_VERSION=$(devscript/get_version.sh)
        echo The new version is $WALLME_VERSION
        echo "::set-env name=WALLME_VERSION::$WALLME_VERSION"
      shell: bash
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

    - name: Publish
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: ${{ env.WALLME_VERSION }}
        prerelease: false
        title: ${{ env.WALLME_VERSION }}
        files: |
          ./dist/executables/wallme
          ./dist/executables/wallme.exe
